[vagrant@server1 demonstration1]$ terraform state list
data.template_file.cloudinit
module.test-vm.data.yandex_compute_image.my_image
module.test-vm.yandex_compute_instance.vm[0]
module.test-vm.yandex_compute_instance.vm[1]
module.vpc_net.yandex_vpc_network.vpc_network
module.vpc_net.yandex_vpc_subnet.vpc_subnet
[vagrant@server1 demonstration1]$ terraform state rm module.test-vm.yandex_compute_instance.vm[0]
Removed module.test-vm.yandex_compute_instance.vm[0]
Successfully removed 1 resource instance(s).
[vagrant@server1 demonstration1]$ terraform state rm module.test-vm.yandex_compute_instance.vm[1]
Removed module.test-vm.yandex_compute_instance.vm[1]
Successfully removed 1 resource instance(s).
[vagrant@server1 demonstration1]$ terraform state rm module.vpc_net.yandex_vpc_subnet.vpc_subnet
Removed module.vpc_net.yandex_vpc_subnet.vpc_subnet
Successfully removed 1 resource instance(s).
[vagrant@server1 demonstration1]$ terraform state rm module.vpc_net.yandex_vpc_network.vpc_network
Removed module.vpc_net.yandex_vpc_network.vpc_network
Successfully removed 1 resource instance(s).
[vagrant@server1 demonstration1]$ yc compute instance list
+----------------------+---------------+---------------+---------+-----------------+-------------+
|          ID          |     NAME      |    ZONE ID    | STATUS  |   EXTERNAL IP   | INTERNAL IP |
+----------------------+---------------+---------------+---------+-----------------+-------------+
| fhmeh5j72js7rl7hi2qc | develop-web-1 | ru-central1-a | RUNNING | 158.160.107.21  | 10.0.1.30   |
| fhms1sqp7trmiaqbaqfo | develop-web-0 | ru-central1-a | RUNNING | 158.160.122.110 | 10.0.1.18   |
+----------------------+---------------+---------------+---------+-----------------+-------------+
[vagrant@server1 demonstration1]$ yc vpc subnet list
+----------------------+-----------------------+----------------------+----------------+---------------+-----------------+
|          ID          |         NAME          |      NETWORK ID      | ROUTE TABLE ID |     ZONE      |      RANGE      |
+----------------------+-----------------------+----------------------+----------------+---------------+-----------------+
| b0cshqfeces10j0s7hr2 | default-ru-central1-c | enp9sr158c2o7bs9gvk0 |                | ru-central1-c | [10.130.0.0/24] |
| e2lsd4jeh20c4n7v4qs3 | default-ru-central1-b | enp9sr158c2o7bs9gvk0 |                | ru-central1-b | [10.129.0.0/24] |
| e9biamk1u482sft7honu | default-ru-central1-a | enp9sr158c2o7bs9gvk0 |                | ru-central1-a | [10.128.0.0/24] |
| e9bqq5qr48up7djsp44p | develop               | enpugtu8jtv6fttvgfpu |                | ru-central1-a | [10.0.1.0/24]   |
+----------------------+-----------------------+----------------------+----------------+---------------+-----------------+
[vagrant@server1 demonstration1]$ yc vpc network list
+----------------------+---------+
|          ID          |  NAME   |
+----------------------+---------+
| enp9sr158c2o7bs9gvk0 | default |
| enpugtu8jtv6fttvgfpu | develop |
+----------------------+---------+
[vagrant@server1 demonstration1]$ terraform import module.vpc_net.yandex_vpc_network.vpc_network enpugtu8jtv6fttvgfpu
module.vpc_net.yandex_vpc_network.vpc_network: Importing from ID "enpugtu8jtv6fttvgfpu"...
module.vpc_net.yandex_vpc_network.vpc_network: Import prepared!
  Prepared yandex_vpc_network for import
module.vpc_net.yandex_vpc_network.vpc_network: Refreshing state... [id=enpugtu8jtv6fttvgfpu]
module.test-vm.data.yandex_compute_image.my_image: Reading...
data.template_file.cloudinit: Reading...
data.template_file.cloudinit: Read complete after 0s [id=0f86be09d6c0f82215062efda7cfe0550a91652cf97392402e72b2cde328a2e9]
module.test-vm.data.yandex_compute_image.my_image: Read complete after 1s [id=fd8o6khjbdv3f1suqf69]

Import successful!

The resources that were imported are shown above. These resources are now in
your Terraform state and will henceforth be managed by Terraform.

[vagrant@server1 demonstration1]$ terraform import module.vpc_net.yandex_vpc_subnet.vpc_subnet e9bqq5qr48up7djsp44p
data.template_file.cloudinit: Reading...
data.template_file.cloudinit: Read complete after 0s [id=0f86be09d6c0f82215062efda7cfe0550a91652cf97392402e72b2cde328a2e9]
module.test-vm.data.yandex_compute_image.my_image: Reading...
module.vpc_net.yandex_vpc_subnet.vpc_subnet: Importing from ID "e9bqq5qr48up7djsp44p"...
module.vpc_net.yandex_vpc_subnet.vpc_subnet: Import prepared!
  Prepared yandex_vpc_subnet for import
module.vpc_net.yandex_vpc_subnet.vpc_subnet: Refreshing state... [id=e9bqq5qr48up7djsp44p]
module.test-vm.data.yandex_compute_image.my_image: Read complete after 0s [id=fd8o6khjbdv3f1suqf69]

Import successful!

The resources that were imported are shown above. These resources are now in
your Terraform state and will henceforth be managed by Terraform.
[vagrant@server1 demonstration1]$ terraform import module.test-vm.yandex_compute_instance.vm[0] fhms1sqp7trmiaqbaqfo
data.template_file.cloudinit: Reading...
data.template_file.cloudinit: Read complete after 0s [id=0f86be09d6c0f82215062efda7cfe0550a91652cf97392402e72b2cde328a2e9]
module.test-vm.data.yandex_compute_image.my_image: Reading...
module.test-vm.data.yandex_compute_image.my_image: Read complete after 1s [id=fd8o6khjbdv3f1suqf69]
module.test-vm.yandex_compute_instance.vm[0]: Importing from ID "fhms1sqp7trmiaqbaqfo"...
module.test-vm.yandex_compute_instance.vm[0]: Import prepared!
  Prepared yandex_compute_instance for import
module.test-vm.yandex_compute_instance.vm[0]: Refreshing state... [id=fhms1sqp7trmiaqbaqfo]

Import successful!

The resources that were imported are shown above. These resources are now in
your Terraform state and will henceforth be managed by Terraform.

[vagrant@server1 demonstration1]$ terraform import module.test-vm.yandex_compute_instance.vm[1] fhmeh5j72js7rl7hi2qc
data.template_file.cloudinit: Reading...
data.template_file.cloudinit: Read complete after 0s [id=0f86be09d6c0f82215062efda7cfe0550a91652cf97392402e72b2cde328a2e9]
module.test-vm.data.yandex_compute_image.my_image: Reading...
module.test-vm.data.yandex_compute_image.my_image: Read complete after 0s [id=fd8o6khjbdv3f1suqf69]
module.test-vm.yandex_compute_instance.vm[1]: Importing from ID "fhmeh5j72js7rl7hi2qc"...
module.test-vm.yandex_compute_instance.vm[1]: Import prepared!
  Prepared yandex_compute_instance for import
module.test-vm.yandex_compute_instance.vm[1]: Refreshing state... [id=fhmeh5j72js7rl7hi2qc]

Import successful!

The resources that were imported are shown above. These resources are now in
your Terraform state and will henceforth be managed by Terraform.

[vagrant@server1 demonstration1]$ terraform plan
data.template_file.cloudinit: Reading...
data.template_file.cloudinit: Read complete after 0s [id=0f86be09d6c0f82215062efda7cfe0550a91652cf97392402e72b2cde328a2e9]
module.test-vm.data.yandex_compute_image.my_image: Reading...
module.vpc_net.yandex_vpc_network.vpc_network: Refreshing state... [id=enpugtu8jtv6fttvgfpu]
module.test-vm.data.yandex_compute_image.my_image: Read complete after 0s [id=fd8o6khjbdv3f1suqf69]
module.vpc_net.yandex_vpc_subnet.vpc_subnet: Refreshing state... [id=e9bqq5qr48up7djsp44p]
module.test-vm.yandex_compute_instance.vm[0]: Refreshing state... [id=fhms1sqp7trmiaqbaqfo]
module.test-vm.yandex_compute_instance.vm[1]: Refreshing state... [id=fhmeh5j72js7rl7hi2qc]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  ~ update in-place

Terraform will perform the following actions:

  # module.test-vm.yandex_compute_instance.vm[0] will be updated in-place
  ~ resource "yandex_compute_instance" "vm" {
      + allow_stopping_for_update = true
        id                        = "fhms1sqp7trmiaqbaqfo"
        name                      = "develop-web-0"
        # (11 unchanged attributes hidden)

      - timeouts {}

        # (6 unchanged blocks hidden)
    }

  # module.test-vm.yandex_compute_instance.vm[1] will be updated in-place
  ~ resource "yandex_compute_instance" "vm" {
      + allow_stopping_for_update = true
        id                        = "fhmeh5j72js7rl7hi2qc"
        name                      = "develop-web-1"
        # (11 unchanged attributes hidden)

      - timeouts {}

        # (6 unchanged blocks hidden)
    }

Plan: 0 to add, 2 to change, 0 to destroy.

───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply"
now.
[vagrant@server1 demonstration1]$ terraform apply
data.template_file.cloudinit: Reading...
data.template_file.cloudinit: Read complete after 0s [id=0f86be09d6c0f82215062efda7cfe0550a91652cf97392402e72b2cde328a2e9]
module.test-vm.data.yandex_compute_image.my_image: Reading...
module.vpc_net.yandex_vpc_network.vpc_network: Refreshing state... [id=enpugtu8jtv6fttvgfpu]
module.test-vm.data.yandex_compute_image.my_image: Read complete after 0s [id=fd8o6khjbdv3f1suqf69]
module.vpc_net.yandex_vpc_subnet.vpc_subnet: Refreshing state... [id=e9bqq5qr48up7djsp44p]
module.test-vm.yandex_compute_instance.vm[0]: Refreshing state... [id=fhms1sqp7trmiaqbaqfo]
module.test-vm.yandex_compute_instance.vm[1]: Refreshing state... [id=fhmeh5j72js7rl7hi2qc]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  ~ update in-place

Terraform will perform the following actions:

  # module.test-vm.yandex_compute_instance.vm[0] will be updated in-place
  ~ resource "yandex_compute_instance" "vm" {
      + allow_stopping_for_update = true
        id                        = "fhms1sqp7trmiaqbaqfo"
        name                      = "develop-web-0"
        # (11 unchanged attributes hidden)

      - timeouts {}

        # (6 unchanged blocks hidden)
    }

  # module.test-vm.yandex_compute_instance.vm[1] will be updated in-place
  ~ resource "yandex_compute_instance" "vm" {
      + allow_stopping_for_update = true
        id                        = "fhmeh5j72js7rl7hi2qc"
        name                      = "develop-web-1"
        # (11 unchanged attributes hidden)

      - timeouts {}

        # (6 unchanged blocks hidden)
    }

Plan: 0 to add, 2 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

module.test-vm.yandex_compute_instance.vm[1]: Modifying... [id=fhmeh5j72js7rl7hi2qc]
module.test-vm.yandex_compute_instance.vm[0]: Modifying... [id=fhms1sqp7trmiaqbaqfo]
module.test-vm.yandex_compute_instance.vm[1]: Modifications complete after 3s [id=fhmeh5j72js7rl7hi2qc]
module.test-vm.yandex_compute_instance.vm[0]: Modifications complete after 3s [id=fhms1sqp7trmiaqbaqfo]

Apply complete! Resources: 0 added, 2 changed, 0 destroyed.